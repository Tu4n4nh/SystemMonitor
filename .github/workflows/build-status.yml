name: Build Status

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  VCPKG_ROOT: ${{ github.workspace }}/vcpkg

jobs:
  quick-build:
    name: Quick Build Check
    runs-on: windows-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.3

    - name: Setup MSVC environment
      uses: ilammy/msvc-dev-cmd@v1

    - name: Cache vcpkg
      uses: actions/cache@v3
      with:
        path: ${{ env.VCPKG_ROOT }}
        key: ${{ runner.os }}-vcpkg-quick-${{ hashFiles('build.bat') }}
        restore-keys: |
          ${{ runner.os }}-vcpkg-

    - name: Setup vcpkg (if not cached)
      run: |
        if (-not (Test-Path "${{ env.VCPKG_ROOT }}")) {
          Write-Host "Setting up fresh vcpkg installation..."
          git clone https://github.com/Microsoft/vcpkg.git ${{ env.VCPKG_ROOT }}
          cd ${{ env.VCPKG_ROOT }}
          .\bootstrap-vcpkg.bat
          .\vcpkg integrate install
        } else {
          Write-Host "Using cached vcpkg installation"
          cd ${{ env.VCPKG_ROOT }}
          .\vcpkg integrate install
        }

    - name: Install dependencies
      run: |
        cd ${{ env.VCPKG_ROOT }}
        
        Write-Host "üì¶ Installing libcurl with SSL support..."
        .\vcpkg install curl[ssl]:x64-windows-static --recurse
        
        Write-Host "üìÇ Verifying installation..."
        .\vcpkg list | Where-Object { $_ -like "*curl*" }
        
        # Verify critical files exist
        $curlHeader = "${{ env.VCPKG_ROOT }}\installed\x64-windows-static\include\curl\curl.h"
        $curlLib = "${{ env.VCPKG_ROOT }}\installed\x64-windows-static\lib\libcurl.lib"
        
        if (Test-Path $curlHeader) {
          Write-Host "‚úÖ curl.h found"
        } else {
          Write-Host "‚ùå curl.h missing"
        }
        
        if (Test-Path $curlLib) {
          Write-Host "‚úÖ libcurl.lib found"
        } else {
          Write-Host "‚ùå libcurl.lib missing"
        }

    - name: Build SystemMonitor
      run: |
        Write-Host "üî® Building SystemMonitor..."

        # Normalize vcpkg path for Windows
        $vcpkgRoot = "${{ env.VCPKG_ROOT }}".Replace('/', '\')
        $env:VCPKG_ROOT = $vcpkgRoot
        
        Write-Host "Using VCPKG_ROOT: $vcpkgRoot"
        
        $includeDir = "$vcpkgRoot\installed\x64-windows-static\include"
        $curlHeader = "$vcpkgRoot\installed\x64-windows-static\include\curl\curl.h"

        if (!(Test-Path $includeDir)) {
          Write-Host "ERROR: Include directory missing: $includeDir"
          exit 1
        } else {
          Write-Host "‚úÖ vcpkg include directory found!"
        }
        
        if (!(Test-Path $curlHeader)) {
          Write-Host "ERROR: curl.h missing: $curlHeader"
          Write-Host "Available files in include directory:"
          Get-ChildItem $includeDir -ErrorAction SilentlyContinue | Format-Table Name
          exit 1
        } else {
          Write-Host "‚úÖ libcurl headers found!"
        }

        .\build.bat